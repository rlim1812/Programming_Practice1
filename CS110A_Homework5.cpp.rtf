{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red92\green38\blue153;\red38\green71\blue75;\red28\green0\blue207;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 /*\
Ryan Lim\
CS 110A\
Professor Giambattista\
11.10.2015\
*/\cf0 \
\
\cf3 #include \cf4 <iostream>\cf3 \
\cf5 using\cf0  \cf5 namespace\cf0  \cf6 std\cf0 ;\
\
\cf5 void\cf0  initializerFunction ();\
\cf5 void\cf0  processFunction (\cf5 int\cf0 [], \cf5 int\cf0 );\
\cf5 void\cf0  finalFunction (\cf5 int\cf0 [], \cf5 int\cf0 );\
\
\cf5 int\cf0  main()\
\{\
    \cf2 //output program purpose\cf0 \
    \cf6 cout\cf0  << \cf4 "This program accepts 10 integers,and outputs a list of values\\n"\cf0 ;\
    \cf6 cout\cf0  << \cf4 "that does not include duplicates of original values.\\n"\cf0 ;\
    \
    \cf2 //call first function\cf0 \
    \cf7 initializerFunction\cf0 ();\
\}\
\
\cf5 void\cf0  initializerFunction()\
\{\
    \cf5 const\cf0  \cf5 int\cf0  size = \cf8 10\cf0 ;\
    \cf5 int\cf0  Array[size],\
          freestyle;\
    \
    \cf5 for\cf0  (\cf5 int\cf0  i = \cf8 0\cf0 ; i < size; i++)\
    \{\
        \cf6 cout\cf0  << \cf4 "Enter a value: "\cf0 ;\
        \cf6 cin\cf0  >> freestyle;\
        Array[i] = freestyle;\
    \}\
    \cf7 processFunction\cf0 (Array, size);\
\}\
\
\cf5 void\cf0  processFunction(\cf5 int\cf0  pseudoFunction[], \cf5 int\cf0  num)\
\{\
    \cf5 int\cf0  count = \cf8 0\cf0 ;\
    \
    \cf2 //go through array, and remove duplicates of values\cf0 \
    \cf5 for\cf0  (\cf5 int\cf0  x = \cf8 0\cf0 ; x < num; x++)\
    \{\
        \cf5 int\cf0  baseCase = pseudoFunction[x];\
        \cf5 for\cf0  (\cf5 int\cf0  xyz = x + \cf8 1\cf0 ; xyz <= num; xyz++)\
        \{\
            \cf5 if\cf0 (xyz == num)\
            \{\
                \cf5 break\cf0 ;\
            \}\
            \cf5 else\cf0  \cf5 if\cf0 (pseudoFunction[xyz] == baseCase)\
            \{\
                pseudoFunction[xyz] = -\cf8 1\cf0 ;\
            \}\
        \}\
    \}\
    \
    \cf5 for\cf0  (\cf5 int\cf0  hello = \cf8 0\cf0 ; hello < num; hello++)\
    \{\
        \cf5 if\cf0  (pseudoFunction[hello] != -\cf8 1\cf0 )\
        \{\
            count++;\
        \}\
    \}\
    \
    \cf5 int\cf0  finalArray[count];\
    \cf5 for\cf0  (\cf5 int\cf0  daBomb = \cf8 0\cf0 ; daBomb < count; daBomb++)\
    \{\
        \cf5 for\cf0  (\cf5 int\cf0  helloWorld = \cf8 0\cf0 ; helloWorld < num; helloWorld++)\
          \{\
            \cf5 if\cf0  (pseudoFunction[helloWorld] != - \cf8 1\cf0 )\
            \{\
                finalArray[daBomb] = pseudoFunction[helloWorld];\
                pseudoFunction[helloWorld] = - \cf8 1\cf0 ;\
                \cf5 break\cf0 ;\
            \}\
          \}\
    \}\
    \cf7 finalFunction\cf0 (finalArray, count);\
\}\
\
\cf5 void\cf0  finalFunction(\cf5 int\cf0  outputArray[], \cf5 int\cf0  outputArraySize)\
\{\
    \cf6 cout\cf0  << \cf4 "Here is the list of the values with duplicates removed:"\cf0 ;\
    \cf5 for\cf0  (\cf5 int\cf0  Yoshi = \cf8 0\cf0 ; Yoshi < outputArraySize; Yoshi++)\
    \{\
        \cf6 cout\cf0  << \cf4 " "\cf0 ;\
        \cf6 cout\cf0  << outputArray[Yoshi];\
    \}\
    \cf6 cout\cf0  << \cf4 "\\n"\cf0 ;\
\}}